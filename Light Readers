// Define the pins for the LEDs
const int lightHundredsPin = 13; // LED for the 'hundreds' place
const int lightTensPin = 12;     // LED for the 'tens' place
const int lightOnesPin = 11;     // LED for the 'ones' place
const int waterSensorPin = A0;   // Analog input pin that the water sensor is attached to

void setup() {
  Serial.begin(9600);
  // Set the LED pins as outputs
  pinMode(lightHundredsPin, OUTPUT);
  pinMode(lightTensPin, OUTPUT);
  pinMode(lightOnesPin, OUTPUT);
}

// The loop function runs over and over again forever
void loop() {
  int waterLevel = analogRead(waterSensorPin); // Read the value from the water sensor
  String waterLevelStr = String(waterLevel);   // Convert the reading to a string 

  // Ensure the string has three characters, adding leading zeros if necessary
  while (waterLevelStr.length() < 3) {
    waterLevelStr = "0" + waterLevelStr;
  }

  // Iterate over each digit in the water level
  for (int i = 0; i < 3; i++) {
    int digit = waterLevelStr[i] - '0'; 

    // Depending on the position of the digit, light up the corresponding LED
    if (i == 0) { // Hundreds place
      for (int j = 0; j < digit; j++) {
        digitalWrite(lightHundredsPin, HIGH); // Turn on the LED
        delay(500);                           // Wait for half a second
        digitalWrite(lightHundredsPin, LOW);  // Turn off the LED
        delay(500);                           // Wait for half a second
      }
    } else if (i == 1) { // Tens place
      for (int j = 0; j < digit; j++) {
        digitalWrite(lightTensPin, HIGH);
        delay(500);
        digitalWrite(lightTensPin, LOW);
        delay(500);
      }
    } else if (i == 2) { // Ones place
      for (int j = 0; j < digit; j++) {
        digitalWrite(lightOnesPin, HIGH);
        delay(500);
        digitalWrite(lightOnesPin, LOW);
        delay(500);
      }
    }
    delay(10); // Short delay before moving to the next digit
  }

  // Print the water level to the serial monitor
  Serial.println("Water Level: " + waterLevelStr);
  delay(10); // Short delay before the loop runs again
}
